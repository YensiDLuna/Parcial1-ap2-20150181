@page "/R_Producto"
@page "/R_Productos/{ProductoId:int}"
@inject IToastService toast
<EditForm Model="productos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row d-flex justify-content-center">

        <div class="col-md-6 col-sm-11 col-11">

            <div class="card mt-1">

                <div class="card-header">
                    <h3>Registro De Productos</h3>
                </div>

                <div class="card-body">
                    <form>

                        <div class="input-group my-2">
                            <label class="input-group-text col-md-3 col-4">ID</label>
                            <InputNumber class="form-control" @bind-Value="productos.ProductoId" />
                            <button class="btn btn-warning" type="button" @onclick="Buscar">
                                <i class="oi oi-magnifying-glass mr-2">Buscar</i>
                            </button>
                        </div>

                        <div class="input-group my-2">
                            <label class="input-group-text col-md-3 col-4">Descripcion</label>
                            <InputText class="form-control" @bind-Value="productos.Descripcion" />
                            <ValidationMessage For="@(() => productos.Descripcion)" />
                        </div>

                        <div class="input-group my-2">
                            <label class="input-group-text col-md-3 col-4">Exitencia</label>
                            <InputNumber class="form-control" @bind-Value="productos.Existencia" />
                            <ValidationMessage For="@(() => productos.Existencia)" />
                        </div>

                        <div class="input-group my-2">
                            <label class="input-group-text col-md-3 col-4">Costo</label>
                            <InputNumber class="form-control" @bind-Value="productos.Costo" />
                            <ValidationMessage For="@(() => productos.Costo)" />
                        </div>

                        <div class="input-group my-2">
                            <label class="input-group-text col-md-3 col-4">Valor De Inventario</label>
                            <InputNumber class="form-control" @bind-Value="productos.ValorInventario" readonly />
                            <ValidationMessage For="@(() => productos.ValorInventario)" />
                        </div>

                    </form>
                </div>

                <div class="card-footer">


                    <div class="container">

                        <div class="row justify-content-center">

                            <button class="col btn btn-primary mx-2 my-2" type="button" @onclick="Nuevo">

                                <i class="oi oi-file mr-2">Nuevo</i>
                            </button>

                            <button class="col btn btn-success mx-2 my-2" @onclick="Guardar">
                                <i class="oi oi-clipboard mr-2">Guardar</i>
                            </button>

                            <button class="col btn btn-danger mx-2 my-2" type="button" @onclick="Eliminar">
                                <i class="oi oi-trash mr-2">Eliminar</i>
                            </button>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</EditForm>
@code{
    Productos productos = new Productos();
    public List<Productos> producto { get; set; }
    protected override void OnInitialized()
    {
        producto = ProductoBLL.GetList(p => true);
    }

    public void Nuevo()
    {
        productos = new Productos();
    }

    private void Buscar()
    {
        var encontrado = ProductoBLL.Buscar(productos.ProductoId);

        if (encontrado != null)
        {
            this.productos = encontrado;
            toast.ShowSuccess("Producto encontrado");
        }
        else
            toast.ShowWarning("Producto no encontrado");
    }

    public void Guardar()
    {
        bool guardado = ProductoBLL.Guardar(productos);

        if (guardado)
        {
            Nuevo();
            toast.ShowSuccess("Producto guardado correctamente");
        }
        else
            toast.ShowError("No se pudo guardar el Producto");
    }

    public void Eliminar()
    {
        bool eliminado = ProductoBLL.Eliminar(productos.ProductoId);

        if (eliminado)
        {
            Nuevo();
            toast.ShowSuccess("Producto eliminado correctamente");
        }
        else
            toast.ShowError("No se pudo eliminar el Producto");
    }
}